// POKEMON CARD IN REACT NATIVE 

import { StyleSheet, SafeAreaView, Platform,ScrollView } from "react-native";
import Greet from "./component/components/Greet";

export default function App() {
  const charmanderData = {
    name : "Charmander",
    image : require("@/assets/images/charmander.png"),
    type :"Fire",
    hp: 39,
    moves : ["Scratch","Ember","Growl", "Leer"],
    weaknesses : ["Water","Rock"],
  };
  const squirtleData = {
    name : " Squirtle",
    image : require("@/assets/images/squirtle.png"),
    type :"Water",
    hp: 44,
    moves : ["Tackle","Water Gun","Tail Whip", "Withdraw"],
    weaknesses : ["Electric","Grass"],
  };
  const bulbasaurData = {
    name : " Bulbasaur",
    image : require("@/assets/images/bulbasaur.png"),
    type :"Grass",
    hp: 45,
    moves : ["Tackle","Vine Whip","Growl", "Leech Seed"],
    weaknesses : ["Fire","Ice","Flying", "Psychic"],
  };
  const PikachuData = {
    name : " Pikachu",
    image : require("@/assets/images/pikachu.png"),
    type :"Electric",
    hp: 35,
    moves : ["Quick Attack","Thunderbolt","Tail Whip", "Growl"],
    weaknesses : ["Ground"]
  };
  return (
    <SafeAreaView style={styles.container}>
      <ScrollView>
      <Greet  {...charmanderData}/>
      <Greet  {...squirtleData}/>
      <Greet  {...bulbasaurData}/>
      <Greet  {...PikachuData}/>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f5f5f5",
    paddingTop: Platform.OS === "android" ? 25 : 0,
  },
});



//CREATE A SEPERATE FILE AND UPLOAD BELOW CODE ON THAT


import { View, Text, StyleSheet, Platform, Image } from 'react-native';

// Fixing the getTypeDetails function

const getTypeDetails = (type) => {
  switch (type.toLowerCase()) {
    case "electric":
      return { borderColor: "#FFD700", emoji: "‚ö°" };
    case "water":
      return { borderColor: "#6493EA", emoji: "üíß" };
    case "fire":
      return { borderColor: "#FF5733", emoji: "üî•" }; // Corrected fire case
    case "grass":
      return { borderColor: "#66CC66", emoji: "üçÉ" };
    default:
      return { borderColor: "#A0A0A0", emoji: "‚ùì" }; // Default case for unknown types
  }
};

export default function Greet({
  name,
  image,
  type,
  hp,
  moves,
  weaknesses,
}) {
  const { borderColor, emoji } = getTypeDetails(type); // Destructuring type details
  
  return (
    <View style={styles.card}>
      <View style={styles.nameContainer}>
        <Text style={styles.name}>{name}</Text>
        <Text style={styles.hp}>üíñ{hp}</Text>
      </View>

      <Image
        source={image}
        style={styles.image}
        accessibilityLabel={`${name} pokemon`}
        resizeMode="contain"
      />

      <View style={styles.typeContainer}>
        <View style={[styles.badge, { borderColor }]}>
          <Text style={styles.typeEmoji}>{emoji}</Text>
          <Text style={styles.typeText}>{type}</Text>
        </View>
      </View>

      <View style= {styles.movesContainer}>
        <Text style={styles.movesText}>
          Moves: {moves.join(", ")}
        </Text>
      </View>

      <View style={styles.weaknessContainer}>
        <Text style={styles.weaknessText}>Weaknesses: {weaknesses.join(", ")}</Text>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  card: {
    backgroundColor: "white",
    borderRadius: 16,
    borderWidth: 2,
    padding: 16,
    margin: 16,
    ...Platform.select({
      android: {
        elevation: 5, // Adds shadow on Android
      },
    }),
  },
  nameContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginBottom: 32,
  },
  name: {
    fontSize: 30,
    fontWeight: "bold",
  },
  hp: {
    fontSize: 22,
  },
  image: {
    width: "100%",
    height: 200,
    marginBottom: 16,
  },
  typeContainer: {
    alignItems: "center",
    marginBottom: 40,
  },
  badge: {
    flexDirection: "row",
    alignItems: "center",
    paddingVertical: 6,
    paddingHorizontal: 12,
    borderRadius: 20,
    borderWidth: 4,
  },
  typeEmoji: {
    fontSize: 30,
    marginRight: 12,
  },
  typeText: {
    fontSize: 22,
    fontWeight: "bold",
  },
  movesContainer :{
    marginBottom: 16,
  },
  movesText : {
    fontSize : 22,
    fontWeight: "bold",
  },
  weaknessContainer : {
    marginBottom : 8,
  },
  weaknessText : {
    fontSize : 22,
    fontWeight:"bold",
  },
});
